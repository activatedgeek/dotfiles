export NEMORUN_HOME=${HOME}/.nemo_run

export NEMO_SKILLS_DISABLE_UNCOMMITTED_CHANGES_CHECK=1
export NEMO_SKILLS_CONFIG_DIR=${HOME}/.config/nemo_skills/cluster_configs

function senroot {
  if [[ -z "${1}" ]]; then
    echo "[ERROR]: Missing Docker image."
    return
  fi

  if [[ -z "${SBATCH_PARTITION}" ]]; then
    if [[ "${INVENTORY_HOSTNAME}" = "eos" ]]; then
      SBATCH_PARTITION=interactive
    elif [[ "${INVENTORY_HOSTNAME}" = "hsg" ]]; then
      SBATCH_PARTITION=cpu
    fi
  fi

  __all_args="${@}"

  srun --pty \
       --account=${SBATCH_ACCOUNT} \
       --partition=${SBATCH_PARTITION:-cpu_interactive} \
       --time=${SBATCH_TIMELIMIT:-"01:00:00"} \
       --mem=${SBATCH_MEM:-"16G"} \
       --job-name=${SBATCH_ACCOUNT}-mkenroot.run \
       bash -l -c "mkenroot ${__all_args}; exit"
}

function snemo-logd {
    if [[ -z "${1}" ]]; then
        echo "[ERROR]: Missing Slurm Job ID."
        echo "Usage:"
        echo "  snemo-logd SLURM_JOB_ID"
        return 1
    fi
    sacct --json -P -o state -j ${1} | jq -r '.jobs[0] | .submit_line' | rev | cut -d' ' -f1 | rev | xargs cat | grep -m1 '\-\-output' | cut -d= -f2 | xargs dirname
}

function snemo-t {
    if [[ -z "${1}" ]]; then
        echo "[ERROR]: Missing Slurm Job ID."
        echo "Usage:"
        echo "  snemo-t SLURM_JOB_ID [main|server|sandbox|...]"
        return 1
    fi
    snemo-logd ${1} | __log_name=${2:-main} xargs -I{} bash -c 'tail -f {}/${__log_name}*.log'
}

function snemo-l {
    if [[ -z "${1}" ]]; then
        echo "[ERROR]: Missing Slurm Job ID."
        echo "Usage:"
        echo "  snemo-l SLURM_JOB_ID [main|server|sandbox|...]"
        return 1
    fi
    snemo-logd ${1} | __log_name=${2:-main} xargs -I{} bash -c 'less {}/${__log_name}*.log'
}

alias nes='uv run --no-sync nemo experiment status'
